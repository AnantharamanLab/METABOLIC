# Base Dockerfile for creating OS with R to eventually host Metabolic in a container
#
# Metabolic source: https://github.com/AnantharamanLab/METABOLIC
# Dockerfile github: https://github.com/tin6150/metabolic/blob/master/Dockerfile.base


FROM r-base:4.0.2
MAINTAINER Tin (at) LBL.gov

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=PST8PDT

RUN touch    _TOP_DIR_OF_CONTAINER_  ;\
    echo "Begin Dockerfile.base build process at (hostname/date): " | tee -a _TOP_DIR_OF_CONTAINER_  ;\
    hostname | tee -a _TOP_DIR_OF_CONTAINER_  ;\
    date     | tee -a _TOP_DIR_OF_CONTAINER_  ;\
    # really weired.  git will just not get installed here 
    apt-get -y --quiet install git wget curl gzip  ;\
    echo "installing packages via apt"       | tee -a _TOP_DIR_OF_CONTAINER_               ;\
    apt-get update ;\
    apt-get -y --force-yes --quiet install r-base hmmer prodigal bamtools file bash tcsh zsh fish less vim bc tmux screen xterm xpdf ;\
    apt-get -y --force-yes --quiet install libpython2-stdlib python2 ;\
    apt-get -y --force-yes --quiet install libxml2 libtinfo5 libtinfo6 diamond-aligner     ;\
    apt-get -y --force-yes --quiet install environment-modules ;\
    apt-get -y --force-yes --quiet install libcurl4-openssl-dev libxml2-dev libssl-dev httrack libhttrack-dev libhttrack2 harvest-tools  ;\
    apt-get -y --quiet install bowtie2  samtools samtools-test ;\
    echo "git cloning the repo for reference/tracking" | tee -a _TOP_DIR_OF_CONTAINER_ ;\
    apt-get -y --quiet install git  ;\
    apt-get -y --quiet clean                              ;\
    test -d /opt/gitrepo  || mkdir -p /opt/gitrepo        ;\
    cd /opt/gitrepo       ;\
    test -d /opt/gitrepo/metabolic  || git clone https://github.com/tin6150/metabolic.git  ;\
    cd /opt/gitrepo/metabolic &&  git pull && cd -                                         ;\
    cd /usr/bin && ln -s diamond-aligner diamond && cd - ;\
    cd / ;\
    dpkg --list > dpkg--list.output ;\

    echo '==================================================================' ;\
    echo "installing packages cran packages" | tee -a _TOP_DIR_OF_CONTAINER_  ;\
    date |            tee -a      _TOP_DIR_OF_CONTAINER_                      ;\
    echo '==================================================================' ;\
    Rscript --quiet -e 'install.packages("diagram",    repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("forcats",    repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("digest",     repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("htmltools",  repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("rmarkdown",  repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("reprex",     repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("tidyverse",  repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("ggthemes",   repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("ggalluvial", repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("reshape2",   repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("ggraph",     repos = "http://cran.us.r-project.org")'    ;\
    echo $? > Rscript.exit.code   ;\
    Rscript --quiet -e 'library()' > R_library_list.out.txt    ;\
    # 4.0 (5acb686) addition
    Rscript --quiet -e 'install.packages("pdftools",   repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("igraph",     repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("tidygraph",  repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("stringr",    repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("plyr",       repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("dplyr",      repos = "http://cran.us.r-project.org")'    ;\
    Rscript --quiet -e 'install.packages("openxlsx",   repos = "http://cran.us.r-project.org")'    ;\
    # no longer asked for in 4.0 doc, but leaving in place if no conflict
    Rscript --quiet -e 'install.packages("stringi",    repos = "http://cran.us.r-project.org")'    ;\
    echo 'last line of RUN block in Dockerbuild without continuation :)'

RUN     cd / \
  && touch _TOP_DIR_OF_CONTAINER_  \
  && TZ=PST8PDT date  >> _TOP_DIR_OF_CONTAINER_                                 \
  && echo  "Dockerfile.base completed 2021.0425"   >> _TOP_DIR_OF_CONTAINER_     

ENV DOCKERFILE Dockerfile.base 
ENV TEST_DOCKER_ENV     this_env_will_be_avail_when_container_is_run_or_exec
ENV TEST_DOCKER_ENV_REF https://vsupalov.com/docker-arg-env-variable-guide/#setting-env-values
ENV DOCKER_MANTABOLIC_BASE  "Dockerfile.base mostly R/CRAN"

ENTRYPOINT [ "/bin/bash" ]
# if no defined ENTRYPOINT, default to bash inside the container
# can also run with exec bash to get shell:
# docker exec -it tin6150/os4metabolic -v $HOME:/home/tin  bash 
# careful not to cover /home/username (for this container)
